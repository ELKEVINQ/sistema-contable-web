{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class SessionService {\n  constructor() {\n    this.isLoggedIn = false;\n  }\n  // Método para verificar si el usuario está autenticado\n  isAuthenticated() {\n    return this.isLoggedIn;\n  }\n  // Método para iniciar sesión\n  login() {\n    this.isLoggedIn = true;\n  }\n  // Método para cerrar sesión\n  logout() {\n    this.isLoggedIn = false;\n  }\n  static #_ = this.ɵfac = function SessionService_Factory(t) {\n    return new (t || SessionService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SessionService,\n    factory: SessionService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["SessionService","constructor","isLoggedIn","isAuthenticated","login","logout","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\kevin\\OneDrive\\Escritorio\\Nivel45\\nivel45\\src\\app\\services\\session\\session.service.ts"],"sourcesContent":["// session.service.ts\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SessionService {\n  private isLoggedIn: boolean = false;\n\n  constructor() {}\n\n  // Método para verificar si el usuario está autenticado\n  isAuthenticated(): boolean {\n    return this.isLoggedIn;\n  }\n\n  // Método para iniciar sesión\n  login() {\n    this.isLoggedIn = true;\n  }\n\n  // Método para cerrar sesión\n  logout() {\n    this.isLoggedIn = false;\n  }\n}\n"],"mappings":";AAMA,OAAM,MAAOA,cAAc;EAGzBC,YAAA;IAFQ,KAAAC,UAAU,GAAY,KAAK;EAEpB;EAEf;EACAC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACD,UAAU;EACxB;EAEA;EACAE,KAAKA,CAAA;IACH,IAAI,CAACF,UAAU,GAAG,IAAI;EACxB;EAEA;EACAG,MAAMA,CAAA;IACJ,IAAI,CAACH,UAAU,GAAG,KAAK;EACzB;EAAC,QAAAI,CAAA,G;qBAlBUN,cAAc;EAAA;EAAA,QAAAO,EAAA,G;WAAdP,cAAc;IAAAQ,OAAA,EAAdR,cAAc,CAAAS,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}